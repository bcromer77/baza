"use client";

import { useState } from "react";
import { motion } from "framer-motion";
import { Share2 } from "lucide-react";

export default function CreatorDashboardPage() {
  const [accounts, setAccounts] = useState([
    {
      work_platform_id: "instagram",
      account_id: "surf-001",
      username: "@SurfNomad",
      followers: 2000000,
      engagement: "High",
      location: "Brazil",
      bio: "Wandering the world one wave at a time 🌊"
    },
    {
      work_platform_id: "tiktok",
      account_id: "fit-001",
      username: "@FlexFiend",
      followers: 120000,
      engagement: "Medium",
      location: "Ireland",
      bio: "Functional fitness, real talk, no filters 💪"
    }
  ]);

  const [stripeBalance, setStripeBalance] = useState(3850);
  const [error, setError] = useState("");
  const [copied, setCopied] = useState(null);

  const getPlatformInfo = (platformId) => {
    const platforms = {
      youtube: { name: "YouTube", icon: "🎥", color: "text-red-700" },
      instagram: { name: "Instagram", icon: "📸", color: "text-pink-700" },
      tiktok: { name: "TikTok", icon: "🎵", color: "text-black" },
      default: { name: "Platform", icon: "🔗", color: "text-gray-700" },
    };
    return platforms[platformId.toLowerCase()] || platforms.default;
  };

  const handleShare = (username) => {
    const url = `https://creatortorch.com/card/${username.replace('@', '')}`;
    navigator.clipboard.writeText(url);
    setCopied(username);
    setTimeout(() => setCopied(null), 2000);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-black via-gray-900 to-black text-white px-6 py-12">
      <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ duration: 1 }}>
        <h1 className="text-5xl font-extrabold text-center mb-6 bg-gradient-to-r from-pink-500 via-yellow-500 to-teal-400 bg-clip-text text-transparent">
          Your Creator Universe 🌍
        </h1>
        <p className="text-center text-gray-300 mb-10 text-lg">
          One link, all your platforms. Show the world what you stand for.
        </p>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
          {accounts.map((account) => {
            const platform = getPlatformInfo(account.work_platform_id);
            return (
              <div key={account.account_id} className="bg-gray-800 rounded-2xl p-6 shadow-xl">
                <div className="flex items-center mb-2">
                  <span className={`text-xl mr-3 ${platform.color}`}>{platform.icon}</span>
                  <h3 className="text-2xl font-bold">{account.username}</h3>
                </div>
                <p className="text-gray-300 mb-3">{account.bio}</p>
                <div className="text-sm text-gray-400">
                  <p>📍 Location: {account.location}</p>
                  <p>🙌 Followers: {account.followers.toLocaleString()}</p>
                  <p>🔥 Engagement: {account.engagement}</p>
                </div>
                <button
                  className="mt-4 w-full bg-gradient-to-r from-teal-500 via-blue-500 to-purple-500 py-2 rounded-lg font-bold text-white hover:opacity-90 flex items-center justify-center gap-2"
                  onClick={() => handleShare(account.username)}
                >
                  <Share2 size={16} />
                  {copied === account.username ? "Link Copied!" : "Share Your Creator Card"}
                </button>
              </div>
            );
          })}
        </div>

        <div className="mt-16 bg-white text-black rounded-2xl p-6 max-w-xl mx-auto shadow-lg">
          <h2 className="text-xl font-bold mb-2">💸 Your Current Balance</h2>
          <p className="text-3xl font-extrabold text-green-600">${stripeBalance.toLocaleString()}</p>
          <p className="text-sm text-gray-600">Synced with Stripe</p>
        </div>

        {error && <div className="bg-red-500 p-4 text-white rounded-lg text-center mt-6">{error}</div>}
      </motion.div>
    </div>
  );
}
